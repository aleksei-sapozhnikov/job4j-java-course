# Users database storage settings
db.type=postgresql
db.address=//localhost:5432
db.name=test_db
db.user=tester
db.password=password
query.createTables=CREATE TABLE IF NOT EXISTS countries ( \
  id   SERIAL PRIMARY KEY, \
  name TEXT UNIQUE \
); \
CREATE TABLE IF NOT EXISTS cities ( \
  id   SERIAL PRIMARY KEY, \
  name TEXT UNIQUE \
); \
CREATE TABLE IF NOT EXISTS users ( \
  id         SERIAL PRIMARY KEY, \
  name       TEXT, \
  login      TEXT UNIQUE, \
  password   TEXT, \
  email      TEXT, \
  created    TIMESTAMP WITH TIME ZONE, \
  role       TEXT, \
  country_id INTEGER REFERENCES countries (id), \
  city_id    INTEGER REFERENCES cities (id) \
);
query.dropAllTables=DO $$ DECLARE brow RECORD; \
BEGIN FOR brow IN (SELECT 'drop table "' || tablename || '" cascade;' AS table_name FROM pg_tables WHERE \
    schemaname = 'public') LOOP EXECUTE brow.table_name; \
  END LOOP; \
END; $$
query.insertUser=INSERT INTO countries (name) VALUES (?) \
ON CONFLICT DO NOTHING; \
INSERT INTO cities (name) VALUES (?) \
ON CONFLICT DO NOTHING; \
INSERT INTO users (name, login, password, email, created, role, country_id, city_id) VALUES \
  (?, ?, ?, ?, ?, ?, (SELECT countries.id FROM countries WHERE countries.name = ?), \
   (SELECT cities.id FROM cities WHERE cities.name = ?)) \
RETURNING id; 

query.updateUserById=UPDATE users \
SET name = ?, login = ?, password = ?, email = ?, role = ? WHERE users.id = ?;
query.deleteUserById=DELETE FROM users WHERE users.id = ?;
query.findUserById=SELECT users.id, users.name, users.login, users.password, users.email, \
  users.created, users.role, countries.name,  cities.name \
FROM users \
  JOIN countries ON users.country_id = countries.id \
  JOIN cities ON users.city_id = cities.id WHERE users.id = ?;
query.findAllUsers=SELECT id, name, login, password, email, created, role FROM users ORDER BY id;